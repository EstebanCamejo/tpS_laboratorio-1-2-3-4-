/*
 * utn_getNumero.c
 *
 *  Created on: 12 abr 2022
 *      Author: Usuario
 */

#include <stdio.h>
#include <stdlib.h>



int utn_getNumero(int* pResultado, char* mensaje, char* mensajeError, int minimo, int maximo, int reintentos)
{
	int bufferInt;
	int retorno = -1;
	if(pResultado != NULL && mensaje != NULL && mensajeError != NULL && minimo <= maximo && reintentos >= 0) //validacion de parametros
	{
		do{
			printf("%s", mensaje); // cualquier tipo de string en el msj
			scanf ("%d", &bufferInt);// guardamos la respuesta en el buffer
			if (bufferInt >= minimo && bufferInt <= maximo)
			{
				*pResultado = bufferInt;
				retorno = 0;
				break;
			}
			else
			{
				printf("%s", mensajeError);
				reintentos --;
			}
		}while(reintentos >= 0 );

	}

	return retorno;
}

int utn_getNumeroFloat(float* pResultado, char* mensaje, char* mensajeError, float minimo, float maximo, int reintentos)
{
	int retorno = -1;
	float bufferFloat;
	if(pResultado != NULL && mensaje != NULL && mensajeError != NULL && minimo <= maximo && reintentos >= 0) //validacion de parametros
	{
		do{
			printf("%s", mensaje);// cualquier tipo de string en el msj
			scanf ("%f", &bufferFloat);// guardamos la respuesta en el buffer
			if (bufferFloat >= minimo && bufferFloat <= maximo)
			{
				*pResultado = bufferFloat;
				retorno = 0;
				break;
			}
			else
			{
				printf("%s", mensajeError);
				reintentos --;
			}
		}while(reintentos >= 0 );

	}

	return retorno;
}

int utn_getNumeroFloatCostos(float* pResultadotarjetaDebito,float* pResultadotarjetaCredito,float* pResultadoBtc ,float* pResultadoKM,float* pResultadoDiferencia, float operador1, float operador2, int operador3)
/*3. Calcular todos los costos:
a) Tarjeta de débito (descuento 10%)
b) Tarjeta de crédito (interés 25%)
c) Bitcoin (1BTC -> 4606954.55 Pesos Argentinos)
d) Mostrar precio por km (precio unitario)
e) Mostrar diferencia de precio ingresada (Latam - Aerolíneas)*/
{
	int retorno = -1;

	float bufferFloatDebito;// a) Tarjeta de débito (descuento 10%)
	float bufferFloatCredito;// b) Tarjeta de crédito (interés 25%)
	float bufferFloatBtc;// c) Bitcoin (1BTC -> 4606954.55 Pesos Argentinos)
	float bufferFloatKM;// d) Mostrar precio por km (precio unitario)
	float bufferFloatDiff;


	if(pResultadotarjetaDebito != NULL && pResultadotarjetaCredito != NULL && pResultadoBtc != NULL && pResultadoKM != NULL && pResultadoDiferencia != NULL && operador3 >0 ) //validacion de parametros
	{

				*pResultadotarjetaDebito = bufferFloatDebito;
				bufferFloatDebito = operador1 * 0.9;

				*pResultadotarjetaCredito = bufferFloatCredito;
				bufferFloatCredito = operador1 * 1.25;

				*pResultadoBtc = bufferFloatBtc;
				bufferFloatBtc = operador1/4606954.55;

				*pResultadoKM = bufferFloatKM;
				bufferFloatKM = operador1/operador3;

				*pResultadoDiferencia = bufferFloatDiff;
				if (operador1 > operador2){
					bufferFloatDiff = operador1 - operador2;					 }
				 else {
					 bufferFloatDiff = operador2 - operador1;
				 }

				retorno = 0;
	}

	return retorno;
}


int utn_getNumeroCaracter(char* pResultado, char* mensaje, char* mensajeError, char minimo, char maximo, int reintentos)
{
	int retorno = -1;
	char bufferChar;
	if(pResultado != NULL && mensaje != NULL && mensajeError != NULL && minimo <= maximo && reintentos >= 0) //validacion de parametros
	{
		do{
			printf("%s", mensaje);// cualquier tipo de string en el msj
			fflush(stdin);
			scanf ("%c", &bufferChar);// guardamos la respuesta en el buffer
			if (bufferChar >= minimo && bufferChar <= maximo)
			{
				*pResultado = bufferChar;
				retorno = 0;
				break;
			}
				else
				{
					printf("%s", mensajeError);
					reintentos --;
				}

			}while(reintentos >= 0 );

		}

	return retorno;
}

								//MSJ			kms			td				tc					btc				pxkm					td2 				tc2					btc 2			pxkm					DiFF
int utn_getNumeroMostrar(char*pResultado, int kms ,float formaDePago1,float formaDePago2,float formaDePago3,float formaDePago4, float formaDePago5, float formaDePago6, float formaDePago7, float formaDePago8,  float diffDePago)
{
	int retorno = -1;
	char bufferChar1;
	char bufferChar2;

	if(pResultado != NULL && formaDePago1 > 0 && formaDePago2 > 0 && formaDePago3 > 0 && formaDePago4 > 0 && formaDePago5 > 0 && formaDePago6 > 0 && formaDePago7 > 0 && formaDePago8 > 0 && diffDePago >0)
	{
		bufferChar1 = pintf ("KMs Ingresados: %d KM \n\nPrecio Aerolineas: $ %f\n a) Precio con tarjeta de debito: $ %f \n b) Precio con tarjeta de credito: $ %f \n c) Precio pagado con bitcoin: %f BTC \n d) Mostrar precio unitario : $ %f \n", kms, formaDePago1, formaDePago2, formaDePago3, formaDePago4);
		bufferChar2 = pintf ("\nPrecio Latam: $ %f \n a) Precio con tarjeta de debito: $ %f \n b) Precio con tarjeta de credito: $ %f \n c) Precio pagado con bitcoin: %f BTC \n d) Mostrar precio unitario : $ %f \n\n\nLa diferencia de precios es: $ %f",formaDePago5, formaDePago6, formaDePago7, formaDePago8, diffDePago);
		*pResultado  = bufferChar1 + bufferChar2 ;
		retorno = 0;
	}

	return retorno;
}


